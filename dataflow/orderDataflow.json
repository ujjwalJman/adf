{
	"name": "orderDataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"name": "source1"
				},
				{
					"name": "source2"
				},
				{
					"name": "source3"
				}
			],
			"sinks": [
				{
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "union1"
				},
				{
					"name": "union2"
				},
				{
					"name": "sort1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          OrderID as short,",
				"          ProductID as string,",
				"          ProductName as string,",
				"          Quantity as short,",
				"          OrderTimestamp as string,",
				"          Price as double,",
				"          CustomerID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false) ~> source1",
				"source(output(",
				"          OrderID as short,",
				"          ProductID as string,",
				"          ProductName as string,",
				"          Quantity as short,",
				"          OrderTimestamp as string,",
				"          Price as double,",
				"          CustomerID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false) ~> source2",
				"source(output(",
				"          OrderID as short,",
				"          ProductID as string,",
				"          ProductName as string,",
				"          Quantity as short,",
				"          OrderTimestamp as string,",
				"          Price as double,",
				"          CustomerID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false) ~> source3",
				"source2, source3 union(byName: true)~> union1",
				"source1, union1 union(byName: true)~> union2",
				"union2 sort(asc(OrderID, true),",
				"     asc(ProductID, true)) ~> sort1",
				"sort1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}