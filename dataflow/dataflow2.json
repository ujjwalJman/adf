{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText7",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "aggregate1"
				},
				{
					"name": "sort1"
				},
				{
					"name": "aggregate2"
				},
				{
					"name": "sort2"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "aggregate3"
				},
				{
					"name": "sort3"
				},
				{
					"name": "aggregate4"
				},
				{
					"name": "sort4"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {Row ID} as string,",
				"          {Order ID} as string,",
				"          {Order Date} as date 'dd-MM-yyyy',",
				"          {Ship Date} as date 'dd-MM-yyyy',",
				"          {Ship Mode} as string,",
				"          {Customer ID} as string,",
				"          {Customer Name} as string,",
				"          Segment as string,",
				"          Country as string,",
				"          City as string,",
				"          State as string,",
				"          {Postal Code} as string,",
				"          Region as string,",
				"          {Product ID} as string,",
				"          Category as string,",
				"          {Sub-Category} as string,",
				"          {Product Name} as string,",
				"          Sales as double,",
				"          Quantity as integer,",
				"          Discount as double,",
				"          Profit as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 aggregate(groupBy(Country,",
				"          State,",
				"          Region),",
				"     {Total Quantity} = sum(Quantity),",
				"          {Total Discount} = round(sum(Discount), 2),",
				"          {Total Profit} = round(sum(Profit), 2),",
				"          {Total Sales} = round(sum(Sales), 2)) ~> aggregate1",
				"aggregate1 sort(desc({Total Profit}, true),",
				"     desc({Total Sales}, true),",
				"     desc({Total Quantity}, true),",
				"     asc({Total Profit}, true)) ~> sort1",
				"source1 aggregate(groupBy(Category,",
				"          {Sub-Category},",
				"          Segment),",
				"     {Total Quantity} = sum(Quantity),",
				"          {Total Discount} = round(sum(Discount), 2),",
				"          {Total Profit} = round(sum(Profit), 2),",
				"          {Total Sales} = round(sum(Sales), 2)) ~> aggregate2",
				"aggregate2 sort(desc({Total Profit}, true),",
				"     desc({Total Sales}, true),",
				"     desc({Total Quantity}, true),",
				"     asc({Total Discount}, true)) ~> sort2",
				"source1 derive(dateDistance = {Ship Date} - {Order Date}) ~> derivedColumn1",
				"derivedColumn1 aggregate(groupBy(Country,",
				"          State,",
				"          City),",
				"     {Average Days To Ship} = round(avg(dateDistance), 1)) ~> aggregate3",
				"aggregate3 sort(desc({Average Days To Ship}, true)) ~> sort3",
				"derivedColumn1 aggregate(groupBy({Ship Mode}),",
				"     AvgDaysTaken = round(avg(dateDistance), 1)) ~> aggregate4",
				"aggregate4 sort(desc(AvgDaysTaken, true)) ~> sort4"
			]
		}
	}
}